name: Flutter CI/CD   # 👈 Tên workflow, sẽ hiện trong tab Actions của repo

on:                   # 👈 Xác định khi nào workflow chạy
  push:               # Khi có push code vào branch main
    branches:
      - main
      - dev
      #- '**'   # 👈 tất cả branch
  pull_request:       # Khi tạo pull request merge vào main
    branches:
      - main
      - dev

  #Thêm workflow_dispatch để có thể tự bấm chạy trong tab Actions mà không cần commit:
  workflow_dispatch:   # 👈 thêm cái này

jobs:
  build:
    name: Build & Test              # 👈 Tên job
    runs-on: ubuntu-latest          # 👈 Chạy trên máy ảo Ubuntu

    steps:                          # 👇 Các bước trong job
      # 1. Checkout code từ repo về máy ảo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Cài đặt Flutter SDK
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.3' # 👈 Flutter version bạn đang dùng
          channel: 'stable'         # 👈 Channel: stable / beta / dev

      # 3. Cache dependencies để build nhanh hơn
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |                   # 👈 Những thư mục sẽ cache
            ~/.pub-cache            # Gói pub (Dart/Flutter packages)
            ${{ runner.tool_cache }}/flutter
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.lock') }}  # 👈 Cache theo pubspec.lock
          restore-keys: |
            ${{ runner.os }}-flutter-

      # 4. Cài đặt dependencies
      - name: Install dependencies
        run: flutter pub get

      - name: Extract version info from build.gradle.kts
        run: |
          # Lấy versionCode (số nguyên)
          VERSION_CODE=$(grep 'versionCode' android/app/build.gradle.kts | grep -v '//' | awk -F'=' '{gsub(/ /,"",$2); print $2}')
          
          # Lấy versionName (chuỗi giữa dấu " ")
          VERSION_NAME=$(grep 'versionName' android/app/build.gradle.kts | grep -v '//' | awk -F'"' '{print $2}')
          
          # fallback nếu rỗng hoặc versionCode không phải số
          if ! [[ "$VERSION_CODE" =~ ^[0-9]+$ ]]; then
            echo "⚠️ VERSION_CODE invalid, using 1"
            VERSION_CODE=1
          fi
          
          if [ -z "$VERSION_NAME" ]; then
            echo "⚠️ VERSION_NAME empty, using 1.0.0"
            VERSION_NAME="1.0.0"
          fi
          
          # Ghi vào môi trường CI
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "👉 Detected versionCode=$VERSION_CODE, versionName=$VERSION_NAME"
      
      

      # 5. Phân tích code (lint check)
      - name: Run Flutter analyze
        run: flutter analyze

      # 6. Chạy test (unit/widget tests)
      - name: Run Flutter tests
        run: flutter test

      # 7. Build APK release
      - name: Build release APK
        run: flutter build apk --release --build-name=${{ env.VERSION_NAME }} --build-number=${{ env.VERSION_CODE }}

      # 8. Upload APK artifact (có thể tải từ tab Actions sau khi build xong)
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      # 9. Build AAB release (App Bundle để upload lên Google Play)
      - name: Build release AAB
        run: flutter build appbundle --release --build-name=${{ env.VERSION_NAME }} --build-number=${{ env.VERSION_CODE }}

      # 10. Upload AAB artifact
      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: build/app/outputs/bundle/release/app-release.aab
